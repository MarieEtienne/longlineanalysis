{
    "contents" : "rm(list=ls())\npath <- '/media/metienne_h/Recherche/CPUE/RockFish/YellowEyeNorRCA_03-09'\n#fileIn=\"DataPropreLongline_noRCA\"\nfileIn=\"insideLL_03_09_noRCA_noDROP_OFFs_noSNARLSs\"\noneArea=F\noneYear=F\nMEM=1\npeConst =T\n\n####library\nlibrary('prettyR')\nlibrary('xtable')\nlibrary('longline')\n\n# #### data importation and verification\n# ###parametres de phma_south\n# m=0.5884\n# sigma=0.0013\n# sigma2=sigma^2\n# a.n=((1-m)*m/sigma2 -1)*m\n# b.n=(1-m)/m * a.n\n# \n# ###parametres de phma_north\n# m=0.5146\n# sigma=0.0014\n# sigma2=sigma^2\n# a.s=((1-m)*m/sigma2 -1)*m\n# b.s=(1-m)/m * a.s\n\n#  abc <-seq(0,1, length.out=100)\n#  plot(abc, dbeta(abc,shape1=a.s, shape2=b.s),  \"l\", col=3)\n#  lines(abc, dbeta(abc,shape1=a.n, shape2=b.n),  col=2)\n# # echan1 = rbeta(1000,, shape1=a.n, shape2=b.n)\n# # echan2 = rbeta(1000,, shape1=a.s, shape2=b.s)\n# # m=mean(c(echan1, echan2))\n# # sigma=sd(c(echan1, echan2))\n# # sigma2=sigma^2\n# # a.moy=round(((1-m)*m/sigma2 -1)*m)\n# # b.moy=round((1-m)/m * a.moy)\n# # lines(abc, dbeta(abc,shape1=a.moy, shape2=b.moy),  col=4)\n\n\n# ## Find the rihgt quantiles\n# q99percent=max(qbeta(0.99, shape1=a.n, shape2=b.n), qbeta(0.99, shape1=a.s, shape2=b.s))\n# q1percent=min(qbeta(0.01, shape1=a.n, shape2=b.n), qbeta(0.01, shape1=a.s, shape2=b.s))\nq99percent = 0.001\nq1percent=1e-6\n\n# \n toMin = function(par)\n {\n   return( (q99percent-qbeta(0.99, shape1=par[1], shape2=par[2]))^2+ (q1percent-qbeta(0.01, shape1=par[1], shape2=par[2]))^2)\n }\n \n par=optim(c( 0.1, 0.1), toMin)$par\n# a.moy=par[1]\n# b.moy=par[2]\n# lines(abc, dbeta(abc,shape1=a.moy, shape2=b.moy),  col=4)\n# \n# \n# \n\n\n# Reading data ------------------------------------------------------------\n\n\nsetwd(path)\nresdir <- \"Res\"\nif( ! file.exists(file.path(path,resdir)) )\n  dir.create(file.path(path,resdir))\ndatalong = read.table(paste(fileIn,'.csv', sep=''), sep=\";\", header=T, skip=1)\ndatalong$N=datalong$NT + datalong$NNT + datalong$Ne+ datalong$Nb\nresdir <- file.path(path,resdir,fileIn, sep='')\nif(oneArea)\n  resdir=paste(resdir , '-OneArea',  sep='')\nif(oneYear)\n  resdir=paste(resdir, '-OneYear', sep='')\nif(!file.exists(resdir)) dir.create(resdir)\nsetwd(resdir)\n\n\nnames(datalong)[which(names(datalong)==\"DFO_STAT_AREA_CODE\")]='Area'\nnames(datalong)[which(names(datalong)==\"soaktime.minutes.\")]='soaktime'\n\n if(oneArea)\n  datalong$Area=as.factor(rep(\"UniqueArea\", nrow(datalong)))\nif(oneYear)\n  datalong$Year=rep(1, nrow(datalong))\n\n\nsummary(datalong)\nhead(datalong)\nlongline.data <- formatData(datalong, ne.missing=F)\n  outBayesGlobal <- estimateBayes(longline.data, MEM=MEM, ne.missing=F,peConst =peConst,  a.moy=a.moy, b.moy=b.moy, \n                                  n.iter=5000,burnin=2000)\n pMGlobal <- postMean(longline.data, outBayesGlobal, peConst=peConst) \n boxPlot_LL(longline.data, outBayesGlobal, YlimT=c(0, 1e-2),  YlimNT=c(0, 2.5e-2), file.out=paste(fileIn, '.pdf', sep=''))\n out = postSummary(longline.data, outBayesGlobal, peConst=peConst)\n write.table(file=paste('MEM', MEM, '-peConst', peConst, '-', fileIn, \"_lambdaTarget.csv\", sep=''), out$lambdaT)\n write.table(file=paste('MEM', MEM, '-peConst', peConst, '-', fileIn, \"_lambdaNonTarget.csv\", sep=''), out$lambdaNT)\n write.table(file=paste('MEM', MEM, '-peConst', peConst, '-', fileIn, \"_pe.csv\", sep=''), out$pe)\n\n\n# Row CPUE ----------------------------------------------------------------\n  \nCPUE <-CLonglineData.CPUE (longline.data)\nwrite.table(file=paste('CPUE-', fileIn, \".csv\", sep=''),  x=CPUE)\n\n\n\n\n# Somerton Kikawa version -------------------------------------------------\nlambdaT <- rep(NA,longline.data$NYear*longline.data$NArea )\nlambdaNT <- rep(NA,longline.data$NYear*longline.data$NArea )\n\n\nloglik <- function(par, YT, YNT, S, N)\n{\n  NobsT = length(YT)\n  NobsNT = length(YNT)\n  if(NobsNT!= NobsT)\n    exit(\"Warning : the numer of observation for target species is different from the number of observations for non target species\")\n  lT = exp(par[1])\n  lNT =exp(par[2])\n  sigmaT=exp(par[3])\n  sigmaNT=exp(par[4])\n  \n  l=lT+lNT\n  sigma=par[3]\n   return(-sum(dnorm(YT, mean= lT/(l) * N *(1-exp(-l*S)), sd=sigmaT,log=T  ) +\n                dnorm(YNT, mean= lNT/(l) * N *(1-exp(-l*S)), sd=sigmaNT,log=T  ) ))\n}\n\n\nareaunique <- as.numeric(levels(as.factor(longline.data$Area)))\nyearunique <- as.numeric(levels(as.factor(longline.data$Year)))\nlongline.data$predictSEM <- matrix(NA, nrow=length(longline.data$N), ncol=2)\nfor( a in 1:longline.data$NArea){\n\n  if(a==2){\n    pdf(file=paste0(\"SemResiduals\",\"A\", areaunique[a],\".pdf\"), height=12)\n  }\n  par(mfrow=c(2,2))\n  for( y in 1: longline.data$NYear){\n   \n    subsample <- CLonglineData.extract(x=longline.data, year=yearunique[y], area=areaunique[a])  \n    ind = which(pMGlobal$Year==yearunique[y]& pMGlobal$Area==areaunique[a] )\n    parinit=c(log(1e-4), log(1e-3),log(2), log(2))\n   \n    if(length(subsample$N)>1){\n    \n      res <- optim(par=parinit, fn=loglik, YT=subsample$NT, \n                   YNT=subsample$NNT+subsample$Ne, S=subsample$S, N=subsample$N)\n      \n      lambdaT[(a-1)*(longline.data$NYear)+y] <- exp(res$par[1])\n      lambdaNT[(a-1)*(longline.data$NYear)+y] <- exp(res$par[2])\n    \n      ind <- which(longline.data$Year==yearunique[y]  & longline.data$Area==areaunique[a] )\n      lT <- lambdaT[(a-1)*(longline.data$NYear)+y]\n      lNT <- lambdaNT[(a-1)*(longline.data$NYear)+y]\n      l <- lT+lNT\n      longline.data$predictSEM[ind,1] <- lT / l * longline.data$N[ind] * (1- exp(-l*longline.data$S[ind]))\n      longline.data$predictSEM[ind,2] <- lNT / l * longline.data$N[ind] * (1- exp(-l*longline.data$S[ind]))\n      if(a==2){\n        targetResiduals = (longline.data$NT[ind] - longline.data$predictSEM[ind,1])/exp(res$par[3])\n        NtargetResiduals = (longline.data$NNT[ind]+longline.data$Ne[ind] - longline.data$predictSEM[ind,2])/exp(res$par[4])\n        \n        yRange= range( c(targetResiduals , NtargetResiduals ))\n        xRange= range(longline.data$predictSEM[ind,1], longline.data$predictSEM[ind,2])\n        plot(x=longline.data$predictSEM[ind,1], xlim=xRange, ylim=yRange, y=targetResiduals, main=paste0( \"Target - Year \", yearunique[y]), xlab=\"Predicted Catch\", ylab=\"Residuals\", pch=19)\n        points(x=longline.data$predictSEM[ind,2], y=NtargetResiduals, pch=15, col=2)\n          }\n    } \n  }\n\n\n  if(a==2){\n    dev.off()\n  }   \n\n}\n\n# Etude Residus SEM -------------------------------------------------------\n\nPredictT <- lambdaT/(lambdaT+lambdaNT)\n\n\n\n# Comparaison MEM-SEM -----------------------------------------------------\n\n\n \n",
    "created" : 1364387317230.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "137|33|180|0|\n143|36|173|2|\n143|36|173|2|\n",
    "hash" : "3162411174",
    "id" : "26407261",
    "lastKnownWriteTime" : 1406645014,
    "path" : "/media/metienne_h/Recherche/CPUE/RockFish/YellowEyeNorRCA_03-09/Main.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}